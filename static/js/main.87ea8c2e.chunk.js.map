{"version":3,"sources":["Calculator.js","Screen.js","EvalHistory.js","App.js","index.js"],"names":["Calculator","state","expression","undefined","show_prev_expression","window","sessionStorage","history_size","number","this","setState","String","operator","Number","left_operand","getAnswer","new_answer","eval","error","slice","length","className","callback","setExpression","onClick","clearExpression","removeCharacter","appendOperator","appendNumber","appendDot","React","Component","Screen","prev_expression","isNaN","prev_answer","total_prev","now_expression","EvalHistory","toggle_idx","totalHistory","i","push","answer","toggleHistory","style","display","map","eval_history","idx","props","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87ea8c2e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Screen from \"./Screen\";\r\nimport EvalHistory from \"./EvalHistory\";\r\n\r\nimport \"./Calculator.css\";\r\nclass Calculator extends React.Component{\r\n    state = {\r\n        expression:undefined,\r\n        show_prev_expression:false\r\n    }\r\n    \r\n    componentDidMount(){\r\n        window.sessionStorage.history_size = 0;\r\n    }\r\n\r\n    appendNumber(number){\r\n        const {expression} = this.state;\r\n        \r\n        if(expression===undefined){\r\n            this.setState({expression:String(number), show_prev_expression:false});\r\n        }else{\r\n            this.setState({expression:expression+number, show_prev_expression:false});\r\n        }\r\n    }\r\n\r\n    appendOperator(operator){\r\n        const {expression} = this.state;\r\n\r\n        if(expression===undefined){\r\n            \r\n            const history_size = Number(window.sessionStorage.history_size);\r\n            const left_operand = history_size===0?\"0\":(window.sessionStorage[\"answer_\"+history_size]===\"Error\"?\"0\":window.sessionStorage[\"answer_\"+history_size]);\r\n            this.setState({expression:left_operand+operator, show_prev_expression:false});\r\n        }else{\r\n            this.setState({expression:expression+operator, show_prev_expression:false});\r\n        }\r\n    }\r\n\r\n    appendDot(){\r\n        const {expression} = this.state;\r\n        if(expression===undefined){\r\n            this.setState({expression:\"0.\", show_prev_expression:false});\r\n        }else{\r\n            this.setState({expression:expression+\".\", show_prev_expression:false});\r\n        }\r\n    }\r\n\r\n    getAnswer(){\r\n        const {expression} = this.state;\r\n        \r\n        var new_answer = undefined;\r\n        try {\r\n            new_answer = String(eval(expression));\r\n        } catch (error) {\r\n            new_answer = \"Error\";\r\n        }\r\n        \r\n        const history_size = Number(window.sessionStorage.history_size);\r\n        window.sessionStorage.history_size = history_size+1;\r\n        window.sessionStorage[\"expression_\"+(history_size+1)] = expression;\r\n        window.sessionStorage[\"answer_\"+(history_size+1)] = new_answer;\r\n        this.setState({expression:undefined, show_prev_expression:true});\r\n        \r\n    }\r\n\r\n    clearExpression(){\r\n        this.setState({expression:undefined, show_prev_expression:false});\r\n    }\r\n\r\n    removeCharacter(){\r\n        const {expression} = this.state;\r\n\r\n        if(expression!==undefined){\r\n            this.setState({expression:expression.slice(0, expression.length-1), show_prev_expression:false});\r\n        }\r\n    }\r\n\r\n    setExpression(expression){\r\n        this.setState({expression:expression, show_prev_expression:false});\r\n    }\r\n\r\n    render(){\r\n        const {expression, show_prev_expression} = this.state;\r\n        return (\r\n            <section className=\"container\">\r\n                <EvalHistory callback={(expression) => this.setExpression(expression)}/>\r\n                <Screen expression={expression} show_prev_expression={show_prev_expression}/>\r\n                <div className=\"button_container\">\r\n                    <button className=\"middle_button\" onClick={() => this.clearExpression()}>AC</button>\r\n                    <button className=\"middle_button\" onClick={() => this.removeCharacter()}>CE</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendOperator(\"%\")}>%</button>\r\n\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(7)}>7</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(8)}>8</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(9)}>9</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendOperator(\"/\")}>/</button>\r\n                    \r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(4)}>4</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(5)}>5</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(6)}>6</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendOperator(\"*\")}>*</button>\r\n                    \r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(1)}>1</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(2)}>2</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(3)}>3</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendOperator(\"-\")}>-</button>\r\n                    \r\n                    <button className=\"small_button\" onClick={() => this.appendDot()}>.</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendNumber(0)}>0</button>\r\n                    <button className=\"small_button\" onClick={() => this.getAnswer()}>=</button>\r\n                    <button className=\"small_button\" onClick={() => this.appendOperator(\"+\")}>+</button>\r\n                    \r\n                </div>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from \"react\";\r\n\r\nimport \"./Screen.css\";\r\n\r\nfunction Screen({expression, show_prev_expression}){\r\n    const history_size = Number(window.sessionStorage.history_size);\r\n    const prev_expression = (history_size===0||isNaN(history_size))?null:(show_prev_expression?window.sessionStorage[\"expression_\"+history_size]:\"Ans\");\r\n    const prev_answer = history_size===0?null:window.sessionStorage[\"answer_\"+history_size];\r\n\r\n    const total_prev = prev_expression?(prev_expression+\" = \"+prev_answer):null;\r\n    const now_expression = expression===undefined?\"0\":expression;\r\n    return (\r\n        <div className=\"screen\">\r\n            <span className=\"prev_expression\">{total_prev}</span>\r\n            <span className=\"now_expression\">{now_expression}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Screen;","import React from \"react\";\r\n\r\nimport \"./EvalHistory.css\";\r\nclass EvalHistory extends React.Component {\r\n    state = {\r\n        toggle_idx:0\r\n    }\r\n\r\n    toggleHistory(){\r\n        const {toggle_idx} = this.state;\r\n        this.setState({toggle_idx:(toggle_idx+1)%2});\r\n    }\r\n\r\n    render() {\r\n        let totalHistory = [];\r\n        const visibility = [\"none\", \"block\"];\r\n        const {toggle_idx} = this.state; \r\n        const history_size = Number(window.sessionStorage.history_size);\r\n\r\n        for (let i = 1; i <= history_size; i += 1) {\r\n            totalHistory.push({\r\n                expression: window.sessionStorage[\"expression_\" + i],\r\n                answer: window.sessionStorage[\"answer_\" + i],\r\n            });\r\n        }\r\n        \r\n        return (\r\n            <section className=\"history_container\">\r\n                <button className=\"history__button\" onClick={() => this.toggleHistory()}>HISTORY</button>\r\n                <ul className=\"histories\" style={{display: visibility[toggle_idx]}}>        \r\n                    {totalHistory.map((eval_history, idx) => (\r\n                        <li className=\"histories__history\" key={idx}>\r\n                            <button className=\"expression_button\" onClick={() => {this.toggleHistory(); this.props.callback(eval_history.expression)}}>{eval_history.expression}</button>\r\n                            <span className=\"expression_text\">=</span>\r\n                            <button className=\"expression_button\" onClick={() => {this.toggleHistory(); this.props.callback(eval_history.answer)}}>{eval_history.answer}</button></li>\r\n                    ))}\r\n                </ul>\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EvalHistory;","import React from \"react\";\nimport Calculator from \"./Calculator\";\n\nimport \"./App.css\";\n\nfunction App() {\n    return <Calculator /> ;\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( < App / > ,\n    document.getElementById('root')\n);"],"sourceRoot":""}